const e = require('express');
const express = require('express');
const router = express.Router();



const AuthController = require('../controllers/AuthController');
const { update } = require('../models/Faculty');

const FacultyModel = require('../models/Faculty');
const StudentModel = require('../models/Student');
const McqModel = require('../models/mcq');

router.post('/registerStudent', AuthController.registerStudent);
router.post('/loginStudent', AuthController.loginStudent);
router.post('/registerFaculty', AuthController.registerFaculty);
router.post('/loginFaculty', AuthController.loginFaculty);
router.get('/test', AuthController.test);

// faculty creates a classroom with id string
router.post('/createClassroom/:id', function (req, res) {
    var id = req.params.id;
    var insertclassroomid = { classroomid: req.body.classroomid }

    FacultyModel.findOneAndUpdate({ _id: id }, { $push: insertclassroomid }, function (err, result) {
        if (err) {
            res.json({
                error: err
            })
            res.status(500).send();
        } else {
            res.json({
                message: "classroom id update success",
                data: result
            })
        }
    })
});

// student joins classroom with given string also update members in faculty document
router.post('/joinClassroom/:id', function (req, res) {
    var id = req.params.id;
    var joinclassroom = { joinedclassroom: req.body.joinedclassroom }

    StudentModel.findOneAndUpdate({ _id: id }, { $push: joinclassroom }, function (err, result) {
        if (err) {
            res.json({
                error: err
            })
            res.status(500).send();
        } else {
            // res.json({
            //     message: "classroom joined success",
            //     data: result
            // })

            var membersadd = { members: result.email }
            FacultyModel.findOneAndUpdate({ classroomid: req.body.joinedclassroom }, { $push: membersadd }, function (err, memaddresult) {
                if (err) {
                    res.json({
                        error: err
                    })
                    res.status(500).send();
                } else {
                    res.json({
                        message1: "classroom joined success",
                        data1: result,
                        message2: "member add success faculty",
                        data2: memaddresult
                    })
                }
            })

        }
    })
});

// save question generated by faculty
router.post('/savepoll/:id', function(req, res) {
    var id = req.params.id;
  var question = req.body.question
  
  let model = {
    t_id: id,
    question,
    yes:[],
    no:[]
  }
  var mcsmodel = new McqModel(model)
  mcsmodel.save(model, (err, result)=>{
    if (err){
      console.log("error"+ err)
    }else{
      res.json({
        message: "data entered successfully",
        id:result
      })
    }
  })
  // console.log(que)
  
//     var que = req.body.questions;
//     var insertpoll = [{
//         question: req.body.question,
//         ans: [{
//             option1: req.body.option1,
//             responses: []
//         },{
//             option2: req.body.option2,
//             responses: []
//         }],
//     }]
//     var mcq = {
//       t_id: id,
//       qna: insertpoll,
//       type: 'active'
//     }

//     McqModel.collection.insert(mcq, function(err){
//       if (err){
//         res.json({
//           error:err
//         })
//       }else{
//         res.json({
//         message: 'MCQ Data updated successfull',
//         data: mcq._id
//         }) 
//       }
          
      
//     })

    // FacultyModel.findOneAndUpdate({ _id: id }, { $push:{qna: insertpoll} }, {new:true}, function(err, result) {  
    //     if (err) {
    //         res.json({
    //             error: err
    //         })
    //         res.status(500).send();
    //     } else {
    //         // console.log('results', result);
    //         console.log('body insert', insertpoll)
    //         res.json({
    //             message1: "poll question created success",
    //             data: result.qna
    //         })
    //     }
    // })
});


// save ans to database from student

 router.post('/anspoll', function(req, res) {
   
     console.log("req part: ");
     console.log(req.body);
     var id = req.body.id;
     var emailid = req.body.emailid;
     var ansval = req.body.ansval;

       if(ansval === 'true') {
         McqModel.findOneAndUpdate({ "_id" : id }, { $push:{yes: emailid} }, function(err, result) {
         if (err) {
             res.json({
                 error: err
             })
             res.status(500).send();
         } else {
             console.log('results', result);
             console.log('yes insert')
             res.json({
                 message1: "yes ans success",
                 data: result
             })
         }
         })
       }
       else {
         McqModel.findOneAndUpdate({ "_id" : id }, { $push:{no: emailid} }, function(err, result) {
         if (err) {
             res.json({
                 error: err
             })
             res.status(500).send();
         } else {
             console.log('results', result);
             console.log('no insert')
             res.json({
                 message1: "no ans success",
                 data: result
             })
         }
         })
       }
 })


// get api call to get all the stored data.

 router.get('/getfacultyinfo/:id', function(req, res) {
   var id = req.params.id;
   FacultyModel.findOne({ _id: id}, function(err, result) {
     if(err) {
        res.json({
          error: err
        }) 
     } else {
       McqModel.find({ t_id: id}, function(err1, result1) {
         
         res.json({
         //message: "faculty data fetch success",
         //data1: result,
         data2: result1
       })
         
         
       })
       
     }
     
     //  {
     //     if(err) {
     //      res.json({
     //        error: err
     //      }) 
     //   } else {
     //     res.json({
     //       message: "poll data fetch success",
     //       data1: result
     //     })
     //   }   
     // })
     
   })
 })



//     var savepoll = [{
//         type: "poll",
//         ans: [{
//             option1: req.body.option1,
//             responses: []
//         },{
//             option2: req.body.option2,
//             responses: []
//         }],
//     }]
//     let  faculty = FacultyModel.findOne({ "qna._id" : quesid }).exec();
//     if(faculty){
//         faculty.qna.forEach(element => {
//             if(element._id === quesid){
//                 element.
//             }
//         });
//     }else throw "Question not found";

//     FacultyModel.findOne({ "qna._id" : quesid }, { $push:{responses: } }, function(err, result) {
//         if (err) {
//             res.json({
//                 error: err
//             })
//             res.status(500).send();
//         } else {
//             console.log('results', result);
//             console.log('body insert', insertpoll)
//             res.json({
//                 message1: "poll question created success",
//                 data: result
//             })
//         }
//     })
// });


module.exports = router;